<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OPC UA on</title><link>https://www.alexander-koepke.de/categories/opc-ua/</link><description>Recent content in OPC UA on</description><generator>Hugo</generator><language>de-de</language><lastBuildDate>Wed, 07 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/categories/opc-ua/index.xml" rel="self" type="application/rss+xml"/><item><title>Running OPC UA server simulation in dotnet aspire</title><link>https://www.alexander-koepke.de/post/2025-05-07_opcplc_aspire/</link><pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2025-05-07_opcplc_aspire/</guid><description>&lt;h1 id="simulating-an-opc-ua-server-with-net-aspire-and-opc-plc">Simulating an OPC UA Server with .NET Aspire and OPC PLC&lt;/h1>
&lt;p>Deploying an OPC UA server simulation is a common need during development and testing of industrial IoT applications.
Recently, a customer asked how to set up such a simulation using &lt;strong>.NET Aspire&lt;/strong>, in order to streamline development
workflows and easily monitor system components, logs, metrics, and inter-service communication.&lt;/p>
&lt;p>.NET Aspire provides an ideal environment for orchestrating microservices and dependencies, making it a great fit for
hosting a simulated OPC UA server. For the server simulation, I use the free and open-source
&lt;a href="https://github.com/Azure-Samples/iot-edge-opc-plc">OPC PLC&lt;/a> provided by Microsoft. While it&amp;rsquo;s possible to run the
server from source, I prefer using the containerized version published on the Microsoft Container Registry (MCR),
which integrates more easily into an Aspire-based solution.&lt;/p></description></item><item><title>Enhancing Industrial IoT with Cloud Events</title><link>https://www.alexander-koepke.de/post/2024-04-05_opcua_cloudevents_extension/</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2024-04-05_opcua_cloudevents_extension/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The Industrial Internet of Things (IIoT) is at the forefront of a significant
transformation in the manufacturing sector, driven by the convergence of
advanced technologies, hybrid intelligent edge solutions, and AI.
This evolution is not merely about adopting new technologies but about redefining
how manufacturing processes communicate, interact, and operate in a connected world.
This blog post explores these pivotal advancements, highlighting their role in
streamlining operations and fostering a more agile, efficient, and interconnected
manufacturing environment.&lt;/p></description></item><item><title>OPC UA Data Modelling</title><link>https://www.alexander-koepke.de/post/2024-03-20_opcua_compressor_modelling/</link><pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2024-03-20_opcua_compressor_modelling/</guid><description>&lt;p>In this comprehensive tutorial, we will explore the process of OPC UA data modelling. The tutorial will cover modeling a machine, creating an OPC UA server to simulate machinery values, reading data from the server and transmitting it downstream (e.g., to the cloud), and detecting anomalies.&lt;/p>
&lt;h2 id="what-is-opc-ua">What is OPC UA?&lt;/h2>
&lt;p>To answer this question, I like to cite Stefan Hoppe the President and Executive Director of the OPC Foundation:&lt;/p>
&lt;blockquote>
&lt;p>OPC Unified Architecture (OPC UA) is the information exchange standard for secure, reliable, manufacturer- and platform-independent industrial communications. It enables data exchange between products from different manufacturers and across operating systems. The OPC UA standard is based on specifications that were developed in close cooperation between manufacturers, users, research institutes and consortia, in order to enable consistent information exchange in heterogeneous systems.&lt;/p></description></item></channel></rss>