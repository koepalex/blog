<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitmap on</title><link>https://www.alexander-koepke.de/tags/bitmap/</link><description>Recent content in Bitmap on</description><generator>Hugo</generator><language>de-de</language><lastBuildDate>Tue, 07 Jun 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/tags/bitmap/index.xml" rel="self" type="application/rss+xml"/><item><title>Einiges über IDisposable</title><link>https://www.alexander-koepke.de/post/2011-06-07-something-idisposable/</link><pubDate>Tue, 07 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2011-06-07-something-idisposable/</guid><description>&lt;p>Das Standard Interface IDisposable welches  zur &amp;ldquo;Freigabe&amp;rdquo; von Ressourcen in .Net dient ist recht Einfach:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#ff79c6">interface&lt;/span> &lt;span style="color:#50fa7b">IDisposable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#ff79c6">void&lt;/span> Dispose();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nur dieses Interface zu Implementieren reicht in vielen Fällen nicht aus. Es gibt z.B. einen FxCop Fehler &lt;a href="http://msdn.microsoft.com/en-us/library/ms244737(v=vs.80).aspx">Implement IDisposable correctly&lt;/a>, dieser erscheint u.a. bei non-sealed Klassen welche keinen Medthode mit der Signatur protected virtual Dispose(bool) besitzen.  IDisposable zu Implementieren wird nötig wenn man:&lt;/p>
&lt;ol>
&lt;li>unmanged (native) Ressourcen lädt um diese wieder freizugeben&lt;/li>
&lt;li>managed Felder besitzt, welche wiederum IDisposable implementieren&lt;/li>
&lt;/ol>
&lt;p>Im folgenden Beispiel zeigt eine (nach FxCop komplette Implementierung) einer Basis-Klasse  und einer Kind-Klasse:&lt;/p></description></item></channel></rss>