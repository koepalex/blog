<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Parent on</title><link>https://www.alexander-koepke.de/tags/parent/</link><description>Recent content in Parent on</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Sun, 14 Oct 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/tags/parent/index.xml" rel="self" type="application/rss+xml"/><item><title>Ermitteln des PID (Processidentifier) des Vaterprozesses</title><link>https://www.alexander-koepke.de/post/2012-10-14-ermitteln-des-pid-processidentifier-des-vaterprozesses/</link><pubDate>Sun, 14 Oct 2012 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2012-10-14-ermitteln-des-pid-processidentifier-des-vaterprozesses/</guid><description>In manchen Fällen ist es notwendig heraus zu finden, welches der Vaterprozess eines Prozesses ist. Dafür gibt es im Allgemeinen drei verschiedene Lösungen im Windows .NET Umfeld.
Die häufigste Lösung ist die Verwendung von Performancecountern.
var process = FindProcess(); using (var pC = new PerformanceCounter( &amp;#34;Process&amp;#34;, &amp;#34;Creating Process ID&amp;#34;, string.Format(&amp;#34;{0}#{1}&amp;#34;, process.ProcessName, 1), process.MachineName)) { int pid = (int)pC.NextValue(); Console.WriteLine(&amp;#34;parent pid = {0}&amp;#34;, pid); } Die Verwendung von Performancecountern im Allgemeinen kann zwei mögliche Nachteile haben:</description></item></channel></rss>