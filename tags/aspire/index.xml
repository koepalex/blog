<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aspire on</title><link>https://www.alexander-koepke.de/tags/aspire/</link><description>Recent content in Aspire on</description><generator>Hugo</generator><language>de-de</language><lastBuildDate>Wed, 07 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/tags/aspire/index.xml" rel="self" type="application/rss+xml"/><item><title>Running OPC UA server simulation in dotnet aspire</title><link>https://www.alexander-koepke.de/post/2025-05-07_opcplc_aspire/</link><pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2025-05-07_opcplc_aspire/</guid><description>&lt;h1 id="simulating-an-opc-ua-server-with-net-aspire-and-opc-plc">Simulating an OPC UA Server with .NET Aspire and OPC PLC&lt;/h1>
&lt;p>Deploying an OPC UA server simulation is a common need during development and testing of industrial IoT applications.
Recently, a customer asked how to set up such a simulation using &lt;strong>.NET Aspire&lt;/strong>, in order to streamline development
workflows and easily monitor system components, logs, metrics, and inter-service communication.&lt;/p>
&lt;p>.NET Aspire provides an ideal environment for orchestrating microservices and dependencies, making it a great fit for
hosting a simulated OPC UA server. For the server simulation, I use the free and open-source
&lt;a href="https://github.com/Azure-Samples/iot-edge-opc-plc">OPC PLC&lt;/a> provided by Microsoft. While it&amp;rsquo;s possible to run the
server from source, I prefer using the containerized version published on the Microsoft Container Registry (MCR),
which integrates more easily into an Aspire-based solution.&lt;/p></description></item></channel></rss>