<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unauthorizedaccess on</title><link>https://www.alexander-koepke.de/tags/unauthorizedaccess/</link><description>Recent content in Unauthorizedaccess on</description><generator>Hugo</generator><language>de-de</language><lastBuildDate>Mon, 07 Nov 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/tags/unauthorizedaccess/index.xml" rel="self" type="application/rss+xml"/><item><title>UnauthorizedAccessException beim Kopieren einer Datei</title><link>https://www.alexander-koepke.de/post/2011-11-07-unauthorizedaccessexception-beim-kopieren-einer-datei/</link><pubDate>Mon, 07 Nov 2011 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2011-11-07-unauthorizedaccessexception-beim-kopieren-einer-datei/</guid><description>&lt;p>Kopieren, verschieben, umbenennen und löschen von Dateien gehören zu häufigen Aufgaben eines Softwareentwicklers. In diesem Beitrag sollen ein paar Dinge aufgezeigt werden die einem beim kopieren von Datein vielleicht nicht bewusst sind. Wie kopiert man jetzt am besten eine Datei? Eine Variante ist die statische Methode der Klasse File:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>File.Copy(“C:\\input\\test.bmp“, “C:\\output\\test.bmp“, &lt;span style="color:#ff79c6">true&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Damit man sich Überprüfungen wie ob die Datei bereits existiert (File.Exist()) sparen kann, wird die Überladung der Copy-Methode verwendet, welche bestehende Dateien überschreibt. Solange man die Software nur mit administrativen Rechten betreibt, hat man alles richtig gemacht. Muss die Software auch mit Benutzer Rechten arbeiten, kann man hier eine UnauthorizedAccessException bekommen. Dies würde zum Beispiel eintreten wenn eine schreibgeschützte Datei, bereits im Zielverzeichnis existiert und erneut in dieses Verzeichnis kopiert werden soll. Die .Net Implementierung der Copy-Methode fordert Berechtigungen on demand an, das bedeutet erst, wenn besondere Zugriffsrechte benötigt werden, werden diese angefordert. Als Benutzer hat man aber nicht die benötigten Rechte um schreibgeschützte Dateien zu überschreiben. Um diesen speziellen Fall zu lösen, könnte man nach dem kopieren die Attribute der Datei verändern (dafür genügen die Benutzer Rechte):&lt;/p></description></item></channel></rss>