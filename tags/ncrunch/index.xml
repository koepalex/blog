<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ncrunch on</title><link>https://koepalex.github.io/blog/tags/ncrunch/</link><description>Recent content in ncrunch on</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Tue, 19 Jun 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://koepalex.github.io/blog/tags/ncrunch/index.xml" rel="self" type="application/rss+xml"/><item><title>Testgetriebene Entwicklung (mit NCrunch)</title><link>https://koepalex.github.io/blog/post/2012-06-19-testgetriebene-entwicklung-mit-ncrunch/</link><pubDate>Tue, 19 Jun 2012 00:00:00 +0000</pubDate><guid>https://koepalex.github.io/blog/post/2012-06-19-testgetriebene-entwicklung-mit-ncrunch/</guid><description>Beim Testgetriebenen Entwickeln (TDD) wird ein Test-First-Ansatz verfolgt, dass bedeutet, dass erst der Test erstellt wird. Danach wird der Quelltext geschrieben, welcher notwendig ist, damit der Test erfolgreich durchläuft (umgangssprachlich: „grün wird“). Beim Entwickeln mittels TDD sollte nichts programmiert werden, was nicht durch einen Test vorher notwendig wird. Das führt zu einer hohen Abdeckung vom produktiven Quelltext mit Tests sowie zu einem testbaren Entwurf.
Die Vorteile sind u.a.
Dokumentation der Software (in den Test ist ersichtlich, wie die Klassen zu verwenden sind) Definierte Erwartungshaltung an die Implementierung (Refaktorisieren ist ohne Gefahr möglich, denn die Tests würden fehlschlagen, falls man etwas falsch gemacht hat).</description></item></channel></rss>