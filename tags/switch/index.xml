<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Switch on</title><link>https://www.alexander-koepke.de/tags/switch/</link><description>Recent content in Switch on</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Fri, 20 Apr 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/tags/switch/index.xml" rel="self" type="application/rss+xml"/><item><title>Vermeidung von switch-case zur Typen Bestimmung beim Aufruf von generischen Methoden</title><link>https://www.alexander-koepke.de/post/2012-04-20-vermeidung-von-switch-case-zur-typen-bestimmung-beim-aufruf-von-generischen-methoden-3/</link><pubDate>Fri, 20 Apr 2012 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2012-04-20-vermeidung-von-switch-case-zur-typen-bestimmung-beim-aufruf-von-generischen-methoden-3/</guid><description>In der Entwicklung mit .NET hat man öfter folgendes Problem:
Methoden sind generisch implementiert und zu verwendende Objekte sind nur in Form von Referenzen auf Basistypen vorhanden (z.B. System.Array, System.Object). Diese Referenzen können nicht direkt an generische Methode übergeben werden (ergibt einen Compile Fehler).
Häufig liegen daher Typinformationen als String vor (über FullName-Property, aus Konfigurationsdatei, …). Diese Informationen werden anschließend verwendet, um den Typ der Referenz über switch-case aufzulösen.
Zum Beispiel:</description></item></channel></rss>