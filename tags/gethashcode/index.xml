<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gethashcode on</title><link>https://www.alexander-koepke.de/tags/gethashcode/</link><description>Recent content in Gethashcode on</description><generator>Hugo</generator><language>de-de</language><lastBuildDate>Sun, 20 Oct 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alexander-koepke.de/tags/gethashcode/index.xml" rel="self" type="application/rss+xml"/><item><title>GetHashCode dein Freund und Sorgenkind</title><link>https://www.alexander-koepke.de/post/2013-10-20-gethashcode-dein-freund-und-sorgenkind/</link><pubDate>Sun, 20 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.alexander-koepke.de/post/2013-10-20-gethashcode-dein-freund-und-sorgenkind/</guid><description>&lt;p>Eine wichtige Methode beim Arbeiten im .NET Umfeld ist GetHashCode. Sie gibt einen 32 Bit Integer zurück der das Objekt identifizieren soll. Der Hash-Code beschreibt also die Identität des Objektes (im Gegensatz zur Speicherreferenz auf das Objekt).&lt;/p>
&lt;p>Daraus leitet sich die Frage ab &lt;em>Wann zwei Objekte die selbe Identität besitzen?&lt;/em> Im Falle einer Object-Relational-Mapper Klasse beispielsweise, wenn die Instanzen der O/R-Mapper Klasse auf ein und die selbe Zeile(n) der selben Tabelle(n) der selben Datenbank(en) verweisen. Klassischer weise durch eine Kette von Primary-Keys. Der Hash-Code ist auch ein Sorgenkind eines Entwicklers da schon hier die Probleme beginnen. Eine einfach Implementierungen könnte sein:&lt;/p></description></item></channel></rss>